#!/bin/bash

declare -A sumarioAcertos
declare -A sumarioTotal
declare -A sumarioStatus
vermelho='\033[0;31m'
verde='\033[0;32m'
normal='\033[0m'
azul='\033[0;36m'
amarelo='\033[44m'

if (whiptail --title "Incluir a flag fsanitize=bounds?" --yesno "A flag permite checagem de limites no acesso aos vetores, mas pode não estar instalado no seu sistema." 10 70) then
    flags="-fsanitize=bounds"
else
    flags=""
fi

avaliar () {
	file=$1
	if ! [ -n "${sumarioTotal[$1]}" ]; then
		echo -e "${amarelo}              problema $1            ${normal}"
	fi
	sumarioTotal[$1]=$((sumarioTotal[$1]+1))
	if ! [ -n "${sumarioAcertos[$1]}" ]; then
		sumarioAcertos[$1]=0
	fi
	if [ -f $file.c ]; then
		charset="$(file -bi "$file.c" | awk -F "=" '{print $2}')"
		if [ "$charset" != utf-8 ]; then
			iconv -f "$charset" -t utf8 "$file.c" -o tmp.c
			mv tmp.c "$file.c"
		fi
		if gcc $file.c -lm $flags 2> /dev/null; then
			echo -e "$2" > input
			echo -e "$3" > gabarito
			timeout 10 ./a.out < input > output
			printf 'Teste %d: ' ${sumarioTotal[$1]}
			if ! diff -wB output gabarito > /dev/null; then
				echo -e "${vermelho} [x]${normal}"
				echo -e '\tEntrada:' "${azul} $2 ${normal}"
				echo -e '\tSaída do seu programa:' "${azul} $(cat output) ${normal}"
				echo -e '\tSaída esperada:' "${azul} $3 ${normal}"
			else
				echo -e "${verde} [ok] ${normal}"
				sumarioAcertos[$1]=$((sumarioAcertos[$1]+1))
			fi
		else
			sumarioStatus[$1]='código '$file.c' não compila'
		fi
	else
		sumarioStatus[$1]='código '$file.c' não existe'
	fi
}

avaliar 'q1' '4' '1 2 3 4 \n2 3 4 5 \n3 4 5 6 \n4 5 6 7 \n'
avaliar 'q1' '13' '1 2 3 4 5 6 7 8 9 10 11 12 13 \n2 3 4 5 6 7 8 9 10 11 12 13 14 \n3 4 5 6 7 8 9 10 11 12 13 14 15 \n4 5 6 7 8 9 10 11 12 13 14 15 16 \n5 6 7 8 9 10 11 12 13 14 15 16 17 \n6 7 8 9 10 11 12 13 14 15 16 17 18 \n7 8 9 10 11 12 13 14 15 16 17 18 19 \n8 9 10 11 12 13 14 15 16 17 18 19 20 \n9 10 11 12 13 14 15 16 17 18 19 20 21 \n10 11 12 13 14 15 16 17 18 19 20 21 22 \n11 12 13 14 15 16 17 18 19 20 21 22 23 \n12 13 14 15 16 17 18 19 20 21 22 23 24 \n13 14 15 16 17 18 19 20 21 22 23 24 25 \n'
avaliar 'q1' '20' '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \n4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \n5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \n6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \n7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \n8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 \n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \n10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \n11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 \n12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \n13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 \n14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 \n15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 \n17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 \n18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 \n19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 \n20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 \n'

avaliar 'q2' ' 6 4 25 28 26 11 6 ' 'não\n'
avaliar 'q2' ' 6 7 18 23 6 24 9 ' 'não\n'
avaliar 'q2' ' 8 17 22 10 25 26 1 8 3 ' 'não\n'
avaliar 'q2' ' 7 18 8 21 12 25 8 6 ' 'sim\n'
avaliar 'q2' ' 3 22 2 26 ' 'não\n'
avaliar 'q2' ' 10 1 21 29 1 13 3 23 15 3 30 ' 'sim\n'
avaliar 'q2' ' 1 2 ' 'não\n'
avaliar 'q2' ' 8 4 17 2 23 20 27 4 6 ' 'sim\n'
avaliar 'q2' ' 3 3 7 4 ' 'não\n'
avaliar 'q2' ' 1 1 ' 'não\n'
avaliar 'q2' ' 10 25 22 11 20 28 13 18 7 21 1 ' 'não\n'
avaliar 'q2' ' 9 21 15 23 6 21 9 10 10 26 ' 'sim\n'
avaliar 'q2' ' 5 16 25 22 20 25 ' 'sim\n'
avaliar 'q2' ' 9 29 30 2 13 10 17 10 12 10 ' 'sim\n'
avaliar 'q2' ' 90 836 678 153 147 506 315 695 559 846 449 357 282 764 667 285 550 692 124 418 202 672 106 868 642 675 961 144 274 364 712 436 786 381 545 819 739 513 531 578 365 375 886 234 795 989 54 452 45 145 252 799 434 320 389 359 378 243 301 107 662 493 118 28 30 889 898 511 127 753 999 7 84 36 492 632 411 53 293 829 744 421 292 996 150 912 862 664 267 665 132 ' 'não\n'
avaliar 'q2' ' 67 281 395 542 109 249 345 283 234 779 682 650 594 978 859 827 163 371 747 678 382 585 94 320 256 800 580 148 759 45 158 927 584 40 663 598 616 250 101 766 381 129 390 673 120 884 980 291 306 799 924 506 84 654 41 579 602 161 671 143 962 488 382 819 493 672 93 879 ' 'sim\n'
avaliar 'q2' ' 37 399 89 196 178 525 100 586 30 114 704 784 626 710 296 157 429 943 193 886 779 353 844 579 959 82 185 673 316 822 841 730 624 774 137 629 133 363 ' 'não\n'
avaliar 'q2' ' 86 384 944 972 521 686 2 207 121 483 393 165 135 550 571 323 976 945 710 105 142 801 834 603 902 913 971 744 256 382 266 961 39 611 279 921 478 302 773 693 842 71 964 705 176 626 47 825 211 956 899 314 222 145 721 490 490 587 543 603 10 823 305 511 221 175 849 88 411 689 745 654 964 434 877 874 326 741 229 230 706 126 657 853 589 178 300 ' 'sim\n'
avaliar 'q2' ' 18 962 816 910 938 686 270 49 73 279 357 255 207 335 449 599 42 306 791 ' 'não\n'
avaliar 'q2' ' 87 987 847 435 279 749 310 481 90 745 861 269 678 36 65 555 961 959 807 156 628 913 229 283 994 522 659 373 476 304 607 983 683 520 641 108 969 480 433 465 148 403 729 114 489 364 41 366 791 371 747 839 675 101 759 500 596 796 844 369 265 958 838 328 309 337 607 174 577 788 390 107 508 551 169 10 714 227 292 407 91 260 60 131 593 932 319 898 ' 'sim\n'
avaliar 'q2' ' 11 675 611 723 457 858 336 715 298 390 648 531 ' 'não\n'
avaliar 'q2' ' 32 248 547 169 535 327 656 668 421 382 64 871 747 158 901 15 770 908 949 440 755 154 544 871 702 837 701 405 318 852 904 819 399 ' 'sim\n'
avaliar 'q2' ' 12 123 725 343 655 902 994 251 624 444 868 498 381 ' 'não\n'
avaliar 'q2' ' 92 243 91 249 164 167 176 452 812 992 819 364 693 963 702 853 842 458 343 966 687 127 462 296 311 863 532 480 40 647 653 781 880 956 509 546 559 850 735 556 374 110 348 492 927 814 793 908 42 821 72 611 120 25 446 995 500 697 844 417 652 55 83 529 986 316 422 656 642 237 138 398 575 313 588 456 709 122 667 248 885 910 144 400 777 333 73 831 457 959 987 940 857 ' 'não\n'
avaliar 'q2' ' 69 437 523 730 705 777 808 450 101 272 89 514 588 890 827 974 820 623 786 994 663 449 185 173 660 212 770 281 732 580 984 999 673 495 627 534 10 169 755 588 448 563 230 47 386 812 109 943 831 833 184 91 223 521 894 318 481 727 42 560 663 4 85 942 315 420 862 510 489 841 ' 'sim\n'

avaliar 'q3' ' 10 4 -6 1 -10 3 1 2 -4 -8 -10 ' ' 4 3 2 1 1 -4 -6 -8 -10 -10 '
avaliar 'q3' ' 7 -6 -5 6 3 -8 2 -7 ' ' 6 3 2 -5 -6 -7 -8 '
avaliar 'q3' ' 7 6 5 8 1 -2 0 3 ' ' 8 6 5 3 1 0 -2 '
avaliar 'q3' ' 52 30 -82 35 41 -54 -70 64 -61 -27 -62 13 18 -86 48 -74 -49 -10 51 72 -43 -84 26 -2 15 13 -86 -56 4 -1 -28 -87 86 64 -77 -65 9 -51 -55 -84 -18 52 -81 25 -1 -77 -41 -70 -77 32 -24 12 -78 ' ' 86 72 64 64 52 51 48 41 35 32 30 26 25 18 15 13 13 12 9 4 -1 -1 -2 -10 -18 -24 -27 -28 -41 -43 -49 -51 -54 -55 -56 -61 -62 -65 -70 -70 -74 -77 -77 -77 -78 -81 -82 -84 -84 -86 -86 -87 '
avaliar 'q3' ' 97 -24 -16 83 39 13 -82 -10 9 59 87 22 84 -22 79 -59 39 61 83 61 47 -6 -4 -29 61 54 -71 -37 -62 -14 -45 17 26 -1 5 -81 59 47 -35 -77 -27 29 -64 -36 66 1 -16 -41 -20 38 88 34 59 -49 -86 -44 40 -87 68 -76 21 -47 -12 70 -50 -69 -3 50 -34 73 80 45 39 60 -49 -61 81 89 -22 49 39 -42 -41 -42 33 34 -15 -85 37 11 67 61 -49 -87 -11 -69 -80 11 ' ' 89 88 87 84 83 83 81 80 79 73 70 68 67 66 61 61 61 61 60 59 59 59 54 50 49 47 47 45 40 39 39 39 39 38 37 34 34 33 29 26 22 21 17 13 11 11 9 5 1 -1 -3 -4 -6 -10 -11 -12 -14 -15 -16 -16 -20 -22 -22 -24 -27 -29 -34 -35 -36 -37 -41 -41 -42 -42 -44 -45 -47 -49 -49 -49 -50 -59 -61 -62 -64 -69 -69 -71 -76 -77 -80 -81 -82 -85 -86 -87 -87 '
avaliar 'q3' ' 55 -78 -45 20 -5 -69 -65 24 9 40 -15 -43 -20 -18 63 -63 75 32 62 66 28 -22 -13 40 -12 -88 -8 46 -65 26 -25 84 80 -89 -40 4 88 2 22 79 -42 -50 -67 76 73 48 -74 -65 -26 -64 64 -19 -40 -89 52 -10 ' ' 88 84 80 79 76 75 73 66 64 63 62 52 48 46 40 40 32 28 26 24 22 20 9 4 2 -5 -8 -10 -12 -13 -15 -18 -19 -20 -22 -25 -26 -40 -40 -42 -43 -45 -50 -63 -64 -65 -65 -65 -67 -69 -74 -78 -88 -89 -89 '

avaliar 'q4' ' 9 14 4 16 13 2 12 18 8 10 7 2 14 11 1 12 18 7 16 4 3 10 5 8 9 2 12 18 7 16 4 10 8 ' '8\n'
avaliar 'q4' ' 8 9 16 18 8 17 15 9 3 11 19 3 16 17 13 15 7 10 1 3 16 17 15 ' '4\n'
avaliar 'q4' ' 5 9 5 9 13 1 6 14 8 1 7 19 18 13 5 15 1 13 5 ' '3\n'
avaliar 'q4' ' 15 19 83 93 26 63 61 77 65 33 2 92 16 23 34 36 91 3 55 47 85 25 78 21 79 76 56 60 36 51 50 23 67 72 34 48 36 23 34 ' '3\n'
avaliar 'q4' ' 5 8 59 84 53 72 3 49 50 61 10 83 35 81 82 ' '0\n'
avaliar 'q4' ' 22 24 47 69 59 68 9 92 31 87 39 71 53 73 95 1 83 12 36 98 30 10 44 85 41 80 70 69 33 64 68 27 76 16 86 85 57 52 48 72 87 49 61 78 88 67 59 53 69 68 85 87 59 53 ' '6\n'
avaliar 'q4' ' 16 18 82001 26001 57001 55001 87001 29001 79001 66001 34001 42001 85001 21001 1001 5001 89001 22001 62001 2001 91001 90001 95001 13001 40001 5001 84001 26001 65001 72001 57001 33001 9001 77001 59001 10001 5001 26001 57001 ' '3\n'
avaliar 'q4' ' 8 13 31001 54001 15001 34001 47001 42001 38001 84001 6001 86001 87001 35001 77001 82001 95001 27001 96001 39001 57001 41001 51001 ' '0\n'
avaliar 'q4' ' 8 12 71001 65001 29001 66001 85001 84001 70001 7001 34001 63001 87001 70001 98001 82001 17001 78001 53001 12001 74001 8001 70001 ' '1\n'
avaliar 'q4' ' 1 5 20001 23001 37001 44001 73001 36001 ' '0\n'
avaliar 'q4' ' 16 16 17001 62001 81001 20001 71001 76001 23001 22001 19001 38001 97001 49001 25001 88001 61001 3001 8001 54001 2001 80001 26001 69001 43001 72001 46001 92001 40001 45001 86001 19001 20001 13001 19001 20001 ' '2\n'
avaliar 'q4' ' 17 22 52001 57001 25001 67001 85001 2001 5001 75001 18001 1001 83001 81001 55001 16001 70001 13001 50001 48001 98001 50001 87001 85001 29001 42001 25001 7001 18001 15001 30001 81001 67001 60001 91001 39001 53001 27001 69001 63001 70001 50001 85001 25001 18001 81001 67001 70001 ' '7\n'

avaliar 'q5' '10 4 4 2 5 9 8 5 2 1 4' '3 3 1 6 9 8 6 1 0 3'
avaliar 'q5' '10 1 2 3 4 5 6 7 8 9 10' '0 1 2 3 4 5 6 7 8 9'
avaliar 'q5' '15 19 20 30 28 11 21 11 23 8 22 2 18 13 6 20' '7 8 14 13 3 10 3 12 2 11 0 6 5 1 8'
avaliar 'q5' '20 26 5 23 13 9 25 27 3 30 7 29 24 10 14 1 4 5 29 17 3' '15 4 12 9 7 14 16 1 19 6 17 13 8 10 0 3 4 17 11 1'
avaliar 'q5' '1 5' '0'

avaliar 'q6' '10 5 8 7 3 9 4 2 10 1 6 9 4 10 5 3 6 7 1 2 8' '10'
avaliar 'q6' '11 10 1 7 2 5 4 11 6 8 9 3 1 3 11 8 5 4 6 9 2 10 7' '3'
avaliar 'q6' '4 2 3 1 4 3 1 4 2' 'indefinido'
avaliar 'q6' '17 7 3 10 11 6 1 5 15 14 16 4 8 13 9 17 2 12 10 16 14 7 13 11 4 1 2 9 12 3 6 8 17 5 15' 'indefinido'
avaliar 'q6' '7 7 2 3 5 6 1 4 2 7 3 5 1 6 4' 'indefinido'
avaliar 'q6' '17 8 3 6 2 4 7 16 10 13 9 12 5 14 11 1 15 17 2 13 7 4 10 12 14 1 8 5 6 3 15 11 17 9 16' 'indefinido'
avaliar 'q6' '10 6 3 8 9 5 1 2 10 7 4 8 1 2 7 10 9 4 5 3 6' '7'
avaliar 'q6' '18 12 2 3 6 10 1 8 11 7 18 5 16 14 15 4 17 9 13 5 11 10 6 1 8 3 7 4 9 16 15 12 2 14 13 18 17' '5'
avaliar 'q6' '20 9 10 11 12 17 8 4 6 3 13 1 19 14 18 7 16 5 2 20 15 8 18 6 17 2 3 19 11 4 10 15 13 1 14 7 20 5 16 9 12' '2'

avaliar 'q7' '1929375' '3^2 5^4 7^3'
avaliar 'q7' '9616475' '5^2 11^3 17^2'
avaliar 'q7' '60761421' '3^11 7^3'

totalQuestoes=0
notaTotal=0
echo ''
echo -e "${amarelo}              sumário $1            ${normal}"
echo '----------------------'
echo -e 'problema\tacertos / número de testes'
for i in ${!sumarioTotal[@]}; do
	if ! [ -n "${sumarioStatus[$i]}" ]; then
		echo -e $i '\t' ${sumarioAcertos[$i]} / ${sumarioTotal[$i]}
		acertos=${sumarioAcertos[$i]}
		total=${sumarioTotal[$i]}
		notaQuestao=$(echo "$acertos/$total" | bc -l)
		notaTotal=$(echo "$notaTotal+$notaQuestao" | bc -l)
	else
		echo -e $i '\t' 'Erro:' ${sumarioStatus[$i]}
	fi
	totalQuestoes=$((totalQuestoes+1))
done
echo '----------------------'
echo 'Nota: ' $(echo "2*$notaTotal/$totalQuestoes" | bc -l)
